<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dragon.dao.MusicUserDAO">
    <resultMap id="baseMap" type="com.dragon.model.vo.SeleniumCloudMusicUserVo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="music_id" property="musicId" jdbcType="BIGINT"/>
        <result column="music_nick_name" property="musicNickName" jdbcType="VARCHAR"/>
        <result column="user_url" property="userUrl" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="song_name" property="songName" jdbcType="VARCHAR"/>
        <result column="lever" property="lever" jdbcType="TINYINT"/>
    </resultMap>
    <insert id="batchAdd" parameterType="java.util.List">
        INSERT INTO dragon_music_user(
        music_id,
        music_nick_name,
        user_url,create_time)VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.musicId},#{item.musicNickName},#{item.userUrl},#{item.createTime})
        </foreach>
    </insert>

    <select id="queryMusicUser" parameterType="com.dragon.model.query.SeleniumCloudMusicUserQuery">
        <include refid="baseSQL"/>
        <where>
            <if test="startTime != null and startTime != ''">
                and u.create_time <![CDATA[ >= ]]> #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and u.create_time <![CDATA[ <= ]]> #{endTime}
            </if>
            <if test="songId != null and song != '' ">
                and u.music_id=#{songId}
            </if>
            <if test="lever != null">
                and u.lever = #{lever}
            </if>
            <if test="musicNickName != null and musicNickName != ''">
                and u.music_nick_name LIKE CONCAT('%',#{musicNickName},'%')
            </if>
        </where>
    </select>

    <sql id="baseSQL">
        SELECT u.id,
          u.music_id,
          u.music_nick_name,
          u.user_url,
          u.create_time,
          s.id as songId,
          s.song_id,
          s.song_name,
          u.lever
        FROM dragon_music_user AS u LEFT JOIN dragon_music_songs s ON u.id=s.song_id
    </sql>
</mapper>